package autochoosecourse;

import java.util.Properties;
import javax.mail.Authenticator;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.AddressException;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;

public class SendEmail {

    private static Properties mailServerProperties;
    private static MimeMessage generateMailMessage;

    public SendEmail(String address) throws AddressException, MessagingException {
        mailServerProperties = new Properties();
        mailServerProperties.put("mail.smtp.host", "smtp.gmail.com");
        mailServerProperties.put("mail.smtp.port", "587");
        mailServerProperties.put("mail.smtp.auth", "true");
        mailServerProperties.put("mail.smtp.starttls.enable", "true");

        Authenticator auth = new Authenticator() {
            //override the getPasswordAuthentication method
            protected PasswordAuthentication getPasswordAuthentication() {
                return new PasswordAuthentication("chenpuddingcorgi@gmail.com", "sendconfirmemail");
            }
        };
        Session getMailSession = Session.getInstance(mailServerProperties, auth);
        generateMailMessage = new MimeMessage(getMailSession);
        generateMailMessage.addRecipient(Message.RecipientType.TO, new InternetAddress(address));
        //generateMailMessage.addRecipient(Message.RecipientType.CC, new InternetAddress("s1040328@mail.yzu.edu.tw"));
        generateMailMessage.setSubject("此郵件為元智選課監控系統之測試郵件");

        String emailBody = "**************************************** This is a Test Email Generated by Monitor Program. (Mail Test) *****************************************************";
        generateMailMessage.setContent(emailBody, "text/plain; charset=UTF-8");

        Transport transport = getMailSession.getTransport("smtp");
        transport.connect("smtp.gmail.com", "chenpuddingcorgi@gmail.com", "sendconfirmemail");
        // Enter your correct gmail UserID and Password
        // if you have 2FA enabled then provide App Specific Password

        transport.sendMessage(generateMailMessage, generateMailMessage.getAllRecipients());
        transport.close();

    }
    public SendEmail(boolean confirm, String address, String course, String str) throws AddressException, MessagingException {
        mailServerProperties = new Properties();
        mailServerProperties.put("mail.smtp.host", "smtp.gmail.com");
        mailServerProperties.put("mail.smtp.port", "587");
        mailServerProperties.put("mail.smtp.auth", "true");
        mailServerProperties.put("mail.smtp.starttls.enable", "true");

        Authenticator auth = new Authenticator() {
            //override the getPasswordAuthentication method
            protected PasswordAuthentication getPasswordAuthentication() {
                return new PasswordAuthentication("chenpuddingcorgi@gmail.com", "sendconfirmemail");
            }
        };
        Session getMailSession = Session.getInstance(mailServerProperties, auth);
        generateMailMessage = new MimeMessage(getMailSession);
        generateMailMessage.addRecipient(Message.RecipientType.TO, new InternetAddress(address));
        //generateMailMessage.addRecipient(Message.RecipientType.CC, new InternetAddress("s1040328@mail.yzu.edu.tw"));
        generateMailMessage.setSubject("課程 : 「" + course + "」 無法加選(自動發送郵件)");

        String emailBody = str;
        generateMailMessage.setContent(emailBody, "text/html; charset=UTF-8");

        Transport transport = getMailSession.getTransport("smtp");

        // Enter your correct gmail UserID and Password
        // if you have 2FA enabled then provide App Specific Password
        transport.connect("smtp.gmail.com", "chenpuddingcorgi@gmail.com", "sendconfirmemail");
        transport.sendMessage(generateMailMessage, generateMailMessage.getAllRecipients());
        transport.close();
    }

    public SendEmail(String address, String course, String str) throws AddressException, MessagingException {
        mailServerProperties = new Properties();
        mailServerProperties.put("mail.smtp.host", "smtp.gmail.com");
        mailServerProperties.put("mail.smtp.port", "587");
        mailServerProperties.put("mail.smtp.auth", "true");
        mailServerProperties.put("mail.smtp.starttls.enable", "true");

        Authenticator auth = new Authenticator() {
            //override the getPasswordAuthentication method
            protected PasswordAuthentication getPasswordAuthentication() {
                return new PasswordAuthentication("chenpuddingcorgi@gmail.com", "sendconfirmemail");
            }
        };
        Session getMailSession = Session.getInstance(mailServerProperties, auth);
        generateMailMessage = new MimeMessage(getMailSession);
        generateMailMessage.addRecipient(Message.RecipientType.TO, new InternetAddress(address));
        //generateMailMessage.addRecipient(Message.RecipientType.CC, new InternetAddress("s1040328@mail.yzu.edu.tw"));
        generateMailMessage.setSubject("課程 : 「" + course + "」 已加選完成(自動發送郵件)");

        String emailBody = str;
        generateMailMessage.setContent(emailBody, "text/html; charset=UTF-8");

        Transport transport = getMailSession.getTransport("smtp");

        // Enter your correct gmail UserID and Password
        // if you have 2FA enabled then provide App Specific Password
        transport.connect("smtp.gmail.com", "chenpuddingcorgi@gmail.com", "sendconfirmemail");
        transport.sendMessage(generateMailMessage, generateMailMessage.getAllRecipients());
        transport.close();
    }

    public SendEmail(String address, String course, String str, String s) throws AddressException, MessagingException {
        mailServerProperties = new Properties();
        mailServerProperties.put("mail.smtp.host", "smtp.gmail.com");
        mailServerProperties.put("mail.smtp.port", "587");
        mailServerProperties.put("mail.smtp.auth", "true");
        mailServerProperties.put("mail.smtp.starttls.enable", "true");

        Authenticator auth = new Authenticator() {
            //override the getPasswordAuthentication method
            protected PasswordAuthentication getPasswordAuthentication() {
                return new PasswordAuthentication("chenpuddingcorgi@gmail.com", "sendconfirmemail");
            }
        };
        Session getMailSession = Session.getInstance(mailServerProperties, auth);
        generateMailMessage = new MimeMessage(getMailSession);
        generateMailMessage.addRecipient(Message.RecipientType.TO, new InternetAddress(address));
        //generateMailMessage.addRecipient(Message.RecipientType.CC, new InternetAddress("s1040328@mail.yzu.edu.tw"));
        generateMailMessage.setSubject("課程 : 「" + course + "」 空位通知郵件(自動發送郵件)");

        String emailBody = str;
        generateMailMessage.setContent(emailBody, "text/html; charset=UTF-8");

        Transport transport = getMailSession.getTransport("smtp");

        // Enter your correct gmail UserID and Password
        // if you have 2FA enabled then provide App Specific Password
        transport.connect("smtp.gmail.com", "chenpuddingcorgi@gmail.com", "sendconfirmemail");
        transport.sendMessage(generateMailMessage, generateMailMessage.getAllRecipients());
        transport.close();
    }
}
