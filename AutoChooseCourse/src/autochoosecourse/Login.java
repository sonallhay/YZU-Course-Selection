package autochoosecourse;
// 2020/6/29 最新版
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.Toolkit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.PlainDocument;
import org.json.JSONException;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import javax.swing.text.AbstractDocument;
import javax.swing.text.Document;
import javax.swing.text.DocumentFilter;
import org.openqa.selenium.UnhandledAlertException;
import org.openqa.selenium.WebDriverException;


class JTextFieldInt extends PlainDocument {

    private int limit;

    JTextFieldInt(int limit) {
        super();
        this.limit = limit;
    }

    @Override
    public void insertString(int offset, String str, AttributeSet attr) throws BadLocationException {
        if (str == null) {
            return;
        }
        for (int i = 0; i < str.length(); i++) {
            if ((str.charAt(i) >= 48 && str.charAt(i) <= 57)) {
                if ((getLength() + str.length()) <= limit) {
                    super.insertString(offset, str, attr);
                }
            } else {
                return;
            }
        }

    }
}

public class Login extends javax.swing.JFrame {

    class MyDocumentFilter extends DocumentFilter {
        
        private int maxLength = 0;
        
        public MyDocumentFilter(int len) {
            this.maxLength = len;
        }
        
        @Override
        public void replace(DocumentFilter.FilterBypass fb, int i, int i1, String string, AttributeSet as) throws BadLocationException {
            if (fb.getDocument().getLength() > this.maxLength) {
                super.remove(fb, i, i);
            }
            for (int n = string.length(); n > 0; n--) {//an inserted string may be more than a single character i.e a copy and paste of 'aaa123d', also we iterate from the back as super.XX implementation will put last insterted string first and so on thus 'aa123d' would be 'daa', but because we iterate from the back its 'aad' like we want
                char c = string.charAt(n - 1);//get a single character of the string
                if ((c >= 33 && c <= 126)) {//if its an alphabetic character or white space
                    super.replace(fb, i, i1, String.valueOf(c), as);//allow update to take place for the given character
                }
            }
        }

        @Override
        public void remove(DocumentFilter.FilterBypass fb, int offset, int length)
                throws BadLocationException {
            Document doc = fb.getDocument();
            StringBuilder sb = new StringBuilder();
            sb.append(doc.getText(0, doc.getLength()));
            sb.delete(offset, offset + length);
            if (sb.toString().length() == 0) {
                super.replace(fb, offset, length, "", null);
            } else {
                super.remove(fb, offset, length);
            }
        }
    }
    
    public static int countGOPressed = 0;
    Path path = Paths.get("resourses");

    public Login() {
        initComponents();
        setIcon();
        if (Files.notExists(path)) {
            new File("resourses").mkdirs();
        }
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width / 2 - this.getSize().width / 2, dim.height / 2 - this.getSize().height / 2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel(){

            @Override
            public void paintComponent(Graphics g) {
                super.paintComponent(g);

                try {
                    Image img = Toolkit.getDefaultToolkit().getImage(getClass().getResource("border.png"));
                    g.drawImage(img, 0, 0, this);
                }catch(Exception e){}

            }
        };
        jLabel2 = new javax.swing.JLabel();
        semesterYear = new javax.swing.JTextField();
        Go = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        textPwd = new javax.swing.JPasswordField();
        textAccount = new javax.swing.JTextField();
        chrome = new javax.swing.JCheckBox();
        firefox = new javax.swing.JCheckBox();
        visBrowser = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        setSize(new java.awt.Dimension(200, 200));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel1.setText("學年度 :");

        jLabel2.setText("<html>請填入正確(當前)的學年度 EX :1072，請勿填入<br>非當前選課系統之年度，以免造成程式檢查後，<br>要求您重新下載資料(每學期資料依您的網速約5<br>-20分鐘不等)或是重開，耽誤即時選課時段。</html>");
        jLabel2.setFont(new Font("微軟正黑體", Font.BOLD, 12));
        jLabel2.setForeground(Color.RED);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel2)
                .addContainerGap(50, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel2)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        semesterYear.setDocument(new JTextFieldInt(5));

        // Code adding the component to the parent container - not shown here
        semesterYear.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                semesterYearKeyPressed(evt);
            }
        });

        Go.setBackground(new java.awt.Color(255, 46, 36));
        Go.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        Go.setForeground(new java.awt.Color(255, 255, 255));
        Go.setText("Go");
        Go.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                GoMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                GoMouseReleased(evt);
            }
        });
        Go.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GoActionPerformed(evt);
            }
        });
        Go.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                GoKeyPressed(evt);
            }
        });

        jLabel3.setText("Portal 帳號 :");

        jLabel4.setText("Portal 密碼 :");

        textPwd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textPwdKeyPressed(evt);
            }
        });

        ((AbstractDocument) textAccount.getDocument()).setDocumentFilter(new MyDocumentFilter(15));
        textAccount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textAccountKeyPressed(evt);
            }
        });

        chrome.setForeground(new java.awt.Color(0, 153, 255));
        chrome.setText("ChromeBrowser");
        chrome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chromeActionPerformed(evt);
            }
        });
        chrome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                chromeKeyPressed(evt);
            }
        });

        firefox.setForeground(new java.awt.Color(0, 153, 255));
        firefox.setText("FireFoxBrowser");
        firefox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firefoxActionPerformed(evt);
            }
        });
        firefox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                firefoxKeyPressed(evt);
            }
        });

        visBrowser.setFont(new java.awt.Font("微軟正黑體", 1, 12)); // NOI18N
        visBrowser.setForeground(new java.awt.Color(255, 21, 32));
        visBrowser.setText("可視化");
        visBrowser.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                visBrowserKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(textAccount, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
                            .addComponent(semesterYear, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(textPwd, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE))
                        .addGap(30, 30, 30)
                        .addComponent(Go))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(chrome)
                        .addGap(10, 10, 10)
                        .addComponent(firefox)
                        .addGap(10, 10, 10)
                        .addComponent(visBrowser)))
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chrome)
                    .addComponent(firefox)
                    .addComponent(visBrowser))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(semesterYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(textAccount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(textPwd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Go))
                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void GoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GoActionPerformed
        if (semesterYear.getText().equals("") || textAccount.getText().equals("") || textPwd.getText().equals("")) {
            JOptionPane.showMessageDialog(this, new SetLabelFont("請輸入學年度(EX: 1072)、帳號(EX: s1067788)以及個人密碼。"), "提示訊息", JOptionPane.OK_OPTION);
            countGOPressed--;
        } else if (!chrome.isSelected() && !firefox.isSelected()) {
            JOptionPane.showMessageDialog(this, new SetLabelFont("請選擇一種瀏覽器當作後續上網、選課使用。"), "提示訊息", JOptionPane.OK_OPTION);
            countGOPressed--;
        } else {
            try {
                OnlineCheck myscraper = new OnlineCheck(semesterYear.getText(), textAccount.getText(), textPwd.getText(), this);
                String browser = chrome.isSelected() ? "chrome" : "firefox";
                System.out.println(browser);
                if (myscraper.checksemesYearAlived(browser)) {
                    try {
                        new GetClassInfo(semesterYear.getText() + "CoursesData");
                        java.awt.EventQueue.invokeLater(new Runnable() {
                            public void run() {
                                new MainPanel(semesterYear.getText(), textAccount.getText().toLowerCase(), textPwd.getText(), Login.this).setVisible(true);
                            }
                        });
                    } catch (NullPointerException e) {
                        int ret = JOptionPane.showConfirmDialog(this, new SetLabelFont("<html>確認學年度 ： <span style='color: red'>" + semesterYear.getText() + "</span> 課程存在！！！<br>目前磁碟中找不到" + semesterYear.getText() + "之課程相關檔案，請問是否要立即爬取?<br>(爬取時間約為5-20分鐘 (安全爬取) )。</html>"), "", JOptionPane.OK_CANCEL_OPTION);
                        countGOPressed--;
                        if (ret == JOptionPane.OK_OPTION) {
                            myscraper.accessInternet();
                        }
                    }
                } else {
                    try {
                        OnlineCheck.driver.quit();
                        OnlineCheck.driver = null;
                    } catch (Exception e) {
                    }
                    JOptionPane.showMessageDialog(this, new SetLabelFont("<html>請勿隨意輸入年度以及學期，請再次輸入當前的年度和學期(EX:1072)。<br>如果確認沒打錯，那就是學校網站不穩的問題，請稍後再試。</html>"), "確認", JOptionPane.OK_OPTION);
                    countGOPressed--;
                }
            } catch (JSONException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            } catch (UnhandledAlertException ex) {
                try {
                    OnlineCheck.driver.quit();
                    OnlineCheck.driver = null;
                } catch (Exception e) {
                }
                JOptionPane.showMessageDialog(this, new SetLabelFont("<html>Portal 帳號、密碼錯誤，請重新輸入。<br>(或是太多次嘗試登入被暫停存取，請稍後再試)</html>"), "確認", JOptionPane.OK_OPTION);
                countGOPressed--;
            } catch (WebDriverException ex) {
                try {
                    OnlineCheck.driver.quit();
                    OnlineCheck.driver = null;
                } catch (Exception e) {
                }
                JOptionPane.showMessageDialog(this, new SetLabelFont(ex.toString()), "確認", JOptionPane.OK_OPTION);
                if (chrome.isSelected()) {
                    JOptionPane.showMessageDialog(this, new SetLabelFont("<html>請確認您是否有下載 chrome 瀏覽器，其版本需為 : <span style='color: red'> v76 ~ latest version </span>。<br>以及確認網路是否有連線、可上網。<html>"), "確認", JOptionPane.OK_OPTION);
                } else if (firefox.isSelected()) {
                    JOptionPane.showMessageDialog(this, new SetLabelFont("<html>請確認您是否有下載 firefox 瀏覽器，其版本需為 : <span style='color: red'> v57 ~ latest version </span>。<br>以及確認網路是否有連線、可上網。<html>"), "確認", JOptionPane.OK_OPTION);
                }
                System.exit(0);
            }
        }
    }//GEN-LAST:event_GoActionPerformed

    private void GoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GoMousePressed
        Go.setBackground(Color.pink);
        Go.setForeground(Color.black);
    }//GEN-LAST:event_GoMousePressed

    private void GoMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GoMouseReleased
        Go.setBackground(Color.red);
        Go.setForeground(Color.white);
    }//GEN-LAST:event_GoMouseReleased

    private void textAccountKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textAccountKeyPressed
        if (evt.getKeyCode() == 10) {
            textPwd.requestFocus();
        }

    }//GEN-LAST:event_textAccountKeyPressed

    private void semesterYearKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_semesterYearKeyPressed
        if (evt.getKeyCode() == 10) {
            textAccount.requestFocus();
        }
    }//GEN-LAST:event_semesterYearKeyPressed

    private void chromeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chromeActionPerformed
        if (chrome.isSelected()) {
            firefox.setSelected(false);
        }
    }//GEN-LAST:event_chromeActionPerformed

    private void firefoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firefoxActionPerformed
        if (firefox.isSelected()) {
            chrome.setSelected(false);
        }
    }//GEN-LAST:event_firefoxActionPerformed

    private void chromeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_chromeKeyPressed
        if (evt.getKeyCode() == 10) {
            firefox.setSelected(false);
            if (chrome.isSelected()) {
                chrome.setSelected(false);
            } else {
                chrome.setSelected(true);
            }
        }
    }//GEN-LAST:event_chromeKeyPressed

    private void firefoxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_firefoxKeyPressed
        if (evt.getKeyCode() == 10) {
            chrome.setSelected(false);
            if (firefox.isSelected()) {
                firefox.setSelected(false);
            } else {
                firefox.setSelected(true);
            }

        }
    }//GEN-LAST:event_firefoxKeyPressed

    private void visBrowserKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_visBrowserKeyPressed
        if (evt.getKeyCode() == 10) {
            visBrowser.setSelected(!visBrowser.isSelected());
        }
    }//GEN-LAST:event_visBrowserKeyPressed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        if (OnlineCheck.driver != null) {
            OnlineCheck.driver.quit();
        }
    }//GEN-LAST:event_formWindowClosing

    private void textPwdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textPwdKeyPressed
        if (evt.getKeyCode() == 10 && countGOPressed < 1) {
            Go.setBackground(Color.pink);
            Go.setForeground(Color.black);
            Go.doClick();
            Go.setBackground(Color.red);
            Go.setForeground(Color.white);
            countGOPressed++;
        }
    }//GEN-LAST:event_textPwdKeyPressed

    private void GoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_GoKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == 10 && countGOPressed < 1) {
            Go.setBackground(Color.pink);
            Go.setForeground(Color.black);
            Go.doClick();
            Go.setBackground(Color.red);
            Go.setForeground(Color.white);
            countGOPressed++;
        }
    }//GEN-LAST:event_GoKeyPressed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });

    }

    private void setIcon() {
        this.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("mainIcon.png")));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Go;
    private javax.swing.JCheckBox chrome;
    private javax.swing.JCheckBox firefox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField semesterYear;
    private javax.swing.JTextField textAccount;
    private javax.swing.JPasswordField textPwd;
    public static javax.swing.JCheckBox visBrowser;
    // End of variables declaration//GEN-END:variables
}
